const sampler_t m_sampler= 
  CLK_NORMALIZED_COORDS_TRUE |
  CLK_ADDRESS_REPEAT          | // This only works for normalized coords
  CLK_FILTER_LINEAR;

void kernel imgcopy(global uchar4 *restrict d_output, read_only image2d_t d_input)
{
  const int col = get_global_id(0);
  const int row = get_global_id(1);
  const int2 dim = get_image_dim(d_input);

  if (col < dim.x && row < dim.y)
  {
    float2 coords = (float2)(col + 0.5f, r+0.5f);
    coords.x /= dim.x;
    coords.y /= dim.y;

    /*Data is now normalized, we can now transform*/

    coords *= 2;

    const float4 px = read_imagef(d_input, m_sampler, coords);  // 0.5f is added to get the exact pixel value.
    d_output[row*dim.x+col] = convert_uchar4(px*255);  //Value de-normalization
  }
}