kernel void matinit(global int *A, int nrows, int ncols)
{
	int r = get_global_id(1);
	int c = get_global_id(0);

	if (c >= ncols) return;

	A[r*ncols + c] = r - c;
}

kernel void imginit(write_only image2d_t I)
{
	const int r = get_global_id(1);
	const int c = get_global_id(0);

  const int2 dim = get_image_dim(I);

	if (c >= dim.x || r >= dim.y) return;

  write_imagei(I, (int2)(c,r), (int4)(r-c,0,0,0));
}

kernel void transpose_img (global int * restrict T, read_only image2d_t I)
{
  const int r_T = get_global_id(1);
	const int c_T = get_global_id(0);

  int ncols_T = get_image_height(I);
  int nrows_T = get_image_width(I);

	if (c_T >= ncols_T || r_T >= nrows_T) return;

	const int r_A = c_T;
	const int c_A = r_T;

	T[ r_T*ncols_T + c_T ] = read_imagei(I, (int2)(c_A,r_A)).x;
}